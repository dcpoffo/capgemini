// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.data;

namespace backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210504005143_second_migration")]
    partial class second_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("backend.models.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaAvaliacoes")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaCliques")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaximaCompartilhamentos")
                        .HasColumnType("int");

                    b.Property<double>("ValorInvestido")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Anuncio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PessoaId = 1,
                            QuantidadeMaximaAvaliacoes = 1,
                            QuantidadeMaximaCliques = 1,
                            QuantidadeMaximaCompartilhamentos = 1,
                            ValorInvestido = 1.0
                        },
                        new
                        {
                            Id = 2,
                            PessoaId = 2,
                            QuantidadeMaximaAvaliacoes = 2,
                            QuantidadeMaximaCliques = 2,
                            QuantidadeMaximaCompartilhamentos = 2,
                            ValorInvestido = 2.0
                        });
                });

            modelBuilder.Entity("backend.models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Darlan",
                            Sobrenome = "Poffo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Vanessa",
                            Sobrenome = "Tanaka"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Nicolas",
                            Sobrenome = "Poffo"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Gabriel",
                            Sobrenome = "Poffo"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Gengis",
                            Sobrenome = "khan"
                        });
                });

            modelBuilder.Entity("backend.models.Anuncio", b =>
                {
                    b.HasOne("backend.models.Pessoa", "Pessoa")
                        .WithMany("Anuncios")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("backend.models.Pessoa", b =>
                {
                    b.Navigation("Anuncios");
                });
#pragma warning restore 612, 618
        }
    }
}
